{"version":3,"sources":["components/Statistic/Statistic.js","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/App.js","index.js"],"names":["Statistic","good","neutral","bad","total","positivePercentage","className","Section","title","children","FeedbackOptions","options","onLeaveFeedback","map","type","key","onClick","Notification","message","INITIAL_STATE","App","state","handleClick","setState","countTotalFeedback","Object","values","reduce","acc","value","countPositiveFeedbackPercentage","Math","ceil","this","countPositive","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uSAsBeA,G,MAlBG,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OAChB,yBAAKC,UAAU,aACb,uCAAaL,GACb,0CAAgBC,GAChB,sCAAYC,GACZ,wCAAcC,GACd,mDAAyBC,EAAzB,QCIWE,EAXC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,6BACE,4BAAKD,GACJC,ICoBUC,G,MAtBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,6BACGD,EAAQE,KAAI,SAAAC,GAAI,OACf,4BACER,UAAU,SACVS,IAAKD,EACLA,KAAK,SACLE,QAAS,kBAAMJ,EAAgBE,KAE9BA,SCLIG,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,6BAAMA,ICMtCC,G,YAAgB,CACpBlB,KAAM,EACNC,QAAS,EACTC,IAAK,IAGciB,E,4MACnBC,M,eACKF,G,EAGLG,YAAc,SAAAR,GACZ,EAAKS,UAAS,SAAAF,GACZ,OAAO,eAAGP,EAAOO,EAAMP,GAAQ,O,EAInCU,mBAAqB,WACnB,OAAOC,OAAOC,OAAO,EAAKL,OAAOM,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IAAO,I,EAEvEC,gCAAkC,SAAC1B,EAAOH,GAAR,OAChC8B,KAAKC,KAAa,IAAP/B,EAAcG,GAAS2B,KAAKC,KAAa,IAAP/B,EAAcG,GAAS,G,uDAE5D,IACAH,EAASgC,KAAKZ,MAAdpB,KACAC,EAAY+B,KAAKZ,MAAjBnB,QACAC,EAAQ8B,KAAKZ,MAAblB,IAEFC,EAAQ6B,KAAKT,qBACbU,EAAgBD,KAAKH,gCAAgC1B,EAAOH,GAC5DU,EAAUc,OAAOU,KAAKF,KAAKZ,OAEjC,OACE,yBAAKf,UAAU,WACb,kBAAC,EAAD,CAASE,MAAM,yBACb,kBAAC,EAAD,CACEG,QAASA,EACTC,gBAAiBqB,KAAKX,eAI1B,kBAAC,EAAD,CAASd,MAAM,cACF,IAAVJ,EACC,kBAAC,EAAD,CAAcc,QAAQ,sBAEtB,kBAAC,EAAD,CACEjB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoB6B,U,GA5CDE,aCXjCC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.2ec54bd5.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './statistic.css';\n\nconst Statistic = ({ good, neutral, bad, total, positivePercentage }) => (\n  <div className=\"statistic\">\n    <span>Good: {good}</span>\n    <span>Neutral: {neutral}</span>\n    <span>Bad: {bad}</span>\n    <span>Total: {total}</span>\n    <span>PositiveFeedback: {positivePercentage}%</span>\n  </div>\n);\n\nStatistic.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistic;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => (\n  <div>\n    <h2>{title}</h2>\n    {children}\n  </div>\n);\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.object.isRequired,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './feedbackOptions.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <div>\n      {options.map(type => (\n        <button\n          className=\"button\"\n          key={type}\n          type=\"button\"\n          onClick={() => onLeaveFeedback(type)}\n        >\n          {type}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => <div>{message}</div>;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport Statistic from './Statistic';\nimport Section from './Section';\nimport FeedbackOptions from './FeedbackOptions';\nimport Notification from './Notification';\n\nimport './style.css';\nimport '../../node_modules/modern-normalize/modern-normalize.css';\n\nconst INITIAL_STATE = {\n  good: 0,\n  neutral: 0,\n  bad: 0,\n};\n\nexport default class App extends Component {\n  state = {\n    ...INITIAL_STATE,\n  };\n\n  handleClick = type => {\n    this.setState(state => {\n      return { [type]: state[type] + 1 };\n    });\n  };\n\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce((acc, value) => acc + value, 0);\n  };\n  countPositiveFeedbackPercentage = (total, good) =>\n    Math.ceil((good * 100) / total) ? Math.ceil((good * 100) / total) : 0;\n\n  render() {\n    const { good } = this.state;\n    const { neutral } = this.state;\n    const { bad } = this.state;\n\n    const total = this.countTotalFeedback();\n    const countPositive = this.countPositiveFeedbackPercentage(total, good);\n    const options = Object.keys(this.state);\n\n    return (\n      <div className=\"content\">\n        <Section title=\"Pleace leave feedback\">\n          <FeedbackOptions\n            options={options}\n            onLeaveFeedback={this.handleClick}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {total === 0 ? (\n            <Notification message=\"No feedback given\" />\n          ) : (\n            <Statistic\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={countPositive}\n            />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}